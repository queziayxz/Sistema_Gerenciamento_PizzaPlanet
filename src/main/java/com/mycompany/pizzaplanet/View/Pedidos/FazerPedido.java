package com.mycompany.pizzaplanet.View.Pedidos;

import com.mycompany.pizzaplanet.Controller.PedidoController;
import com.mycompany.pizzaplanet.Controller.PizzaController;
import com.mycompany.pizzaplanet.Excecoes.CampoVazio;
import com.mycompany.pizzaplanet.Model.BancoDeDados;
import com.mycompany.pizzaplanet.Model.Cliente;
import com.mycompany.pizzaplanet.Model.Ingrediente;
import com.mycompany.pizzaplanet.Model.Pedido;
import com.mycompany.pizzaplanet.Model.Pizza;
import com.mycompany.pizzaplanet.Model.PizzaDoce;
import com.mycompany.pizzaplanet.Model.PizzaSalgada;
import com.mycompany.pizzaplanet.Model.Produto;
import com.mycompany.pizzaplanet.Model.Tamanho;
import com.mycompany.pizzaplanet.View.DashboardCliente;
import com.mycompany.pizzaplanet.View.Pizzas.GerenciamentoPizza;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Enumeration;
import java.util.List;
import javax.swing.AbstractButton;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;

public class FazerPedido extends javax.swing.JFrame {

    public Font fonteCabecalho = new Font("Monospaced", Font.BOLD, 14);
    public Font fonteCorpo = new Font("Monospaced", Font.PLAIN, 12);
    public JRadioButton JRadioButtonTamanho = new JRadioButton();
    public JRadioButton JRadioButtonPizza = new JRadioButton();
    public JRadioButton JRadioButtonProduto = new JRadioButton();
    public JRadioButton JRadioButtonPagamento = new JRadioButton();
    
    /**
     * Creates new form FazerPedido
     */
    public FazerPedido() {
        initComponents();
        //inicializa o painel dos tamanhos
        panelTamanhosPedido.setLayout(new FlowLayout());
        panelTamanhosPedido.setPreferredSize(new Dimension(300, 200));
        //inicializa o painel das pizzas
//        panelPizzaPedido.setLayout(new FlowLayout());
//        panelPizzaPedido.setPreferredSize(new Dimension(300, 200));
//        //inicializa o painel dos produtos
//        panelProdutoPedido.setLayout(new FlowLayout());
//        panelProdutoPedido.setPreferredSize(new Dimension(300, 200));
//        //inicializa o painel dos pagamentos
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelTamanhosPedido = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        finalizaProduto = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        CBPagamentoPedido = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtNomePizzaDocePedido = new javax.swing.JTextField();
        btnEditPizzaDoce = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableIngredientePizzasDocesPedido = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        listaPizzaDocePedido = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaPizzaSalgadaPedido = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtNomePizzaSalgadaPedido = new javax.swing.JTextField();
        btnEditPizzaSalgada = new javax.swing.JButton();
        btnDellIngre1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNomePizzaDoce6 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableIngredientePizzaSalgadaPedido = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListProdutoPedido = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtNomeProdPedido = new javax.swing.JTextField();
        btnDesmarcarProdutoPedido = new javax.swing.JButton();
        txtValorProdPedido = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel1.setText("Escolha o tamanho desejado!");

        panelTamanhosPedido.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                panelTamanhosPedidoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout panelTamanhosPedidoLayout = new javax.swing.GroupLayout(panelTamanhosPedido);
        panelTamanhosPedido.setLayout(panelTamanhosPedidoLayout);
        panelTamanhosPedidoLayout.setHorizontalGroup(
            panelTamanhosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );
        panelTamanhosPedidoLayout.setVerticalGroup(
            panelTamanhosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 99, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel2.setText("Escolha a Pizza Desejada!");

        jLabel3.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel3.setText("Selecione a forma de pagamento");

        finalizaProduto.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        finalizaProduto.setText("Finalizar Pedido");
        finalizaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizaProdutoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel4.setText("Algum produto adicional?");

        CBPagamentoPedido.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        CBPagamentoPedido.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pix", "Cartão de Crédito", "Cartão de Débito", "Dinheiro" }));

        jLabel5.setText("Nome:");

        btnEditPizzaDoce.setText("Desmarcar Pizza");
        btnEditPizzaDoce.setEnabled(false);
        btnEditPizzaDoce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPizzaDoceActionPerformed(evt);
            }
        });

        jLabel6.setText("Ingredientes:");

        tableIngredientePizzasDocesPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tableIngredientePizzasDocesPedido);

        listaPizzaDocePedido.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        listaPizzaDocePedido.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        listaPizzaDocePedido.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                listaPizzaDocePedidoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        listaPizzaDocePedido.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaPizzaDocePedidoValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(listaPizzaDocePedido);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(txtNomePizzaDocePedido, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditPizzaDoce)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomePizzaDocePedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(btnEditPizzaDoce, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane7)
        );

        jLabel7.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel7.setText("Pizzas Salgadas");

        listaPizzaSalgadaPedido.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        listaPizzaSalgadaPedido.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        listaPizzaSalgadaPedido.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                listaPizzaSalgadaPedidoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        listaPizzaSalgadaPedido.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaPizzaSalgadaPedidoValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listaPizzaSalgadaPedido);

        jLabel10.setText("Nome:");

        btnEditPizzaSalgada.setText("Desmarcar Pizza");
        btnEditPizzaSalgada.setEnabled(false);
        btnEditPizzaSalgada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPizzaSalgadaActionPerformed(evt);
            }
        });

        btnDellIngre1.setText("Deletar Ingrediente");
        btnDellIngre1.setEnabled(false);
        btnDellIngre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDellIngre1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Ingredientes:");

        jLabel12.setText("Nome:");

        tableIngredientePizzaSalgadaPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tableIngredientePizzaSalgadaPedido);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnEditPizzaSalgada)
                        .addGap(923, 923, 923)
                        .addComponent(btnDellIngre1))
                    .addComponent(txtNomePizzaSalgadaPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(1121, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel12)
                        .addComponent(txtNomePizzaDoce6))
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 328, Short.MAX_VALUE)
                        .addComponent(btnDellIngre1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomePizzaSalgadaPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(btnEditPizzaSalgada, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel12)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(txtNomePizzaDoce6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(356, Short.MAX_VALUE)))
        );

        jLabel8.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel8.setText("Pizzas Doces");

        ListProdutoPedido.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        ListProdutoPedido.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                ListProdutoPedidoComponentAdded(evt);
            }
        });
        ListProdutoPedido.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                ListProdutoPedidoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        ListProdutoPedido.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListProdutoPedidoValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ListProdutoPedido);

        jLabel9.setText("Nome:");

        txtNomeProdPedido.setEnabled(false);
        txtNomeProdPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeProdPedidoActionPerformed(evt);
            }
        });

        btnDesmarcarProdutoPedido.setText("Desmarcar Produto");
        btnDesmarcarProdutoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesmarcarProdutoPedidoActionPerformed(evt);
            }
        });

        txtValorProdPedido.setEnabled(false);

        jLabel13.setText("Valor:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDesmarcarProdutoPedido)
                    .addComponent(jLabel9)
                    .addComponent(txtNomeProdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorProdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeProdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(8, 8, 8)
                .addComponent(txtValorProdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addComponent(btnDesmarcarProdutoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(panelTamanhosPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(CBPagamentoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(finalizaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(189, 189, 189))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(651, 651, 651)
                                .addComponent(jLabel7)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelTamanhosPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jLabel4)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel3)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(finalizaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(CBPagamentoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jScrollPane1.setViewportView(jPanel1);

        jMenu1.setText("Dashboard");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1464, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1397, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void panelTamanhosPedidoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_panelTamanhosPedidoAncestorAdded
        // TODO add your handling code here:
        try {
            BancoDeDados banco = new BancoDeDados();
            BancoDeDados.leBDTamanho(BancoDeDados.getBancoTamanho());
            for(Tamanho tamanho : Tamanho.getListaTamanhos()) {
                int optionNumber = buttonGroup1.getButtonCount() + 1;
                JRadioButton radioButton = new JRadioButton(tamanho.getNome());
                radioButton.setFont(fonteCorpo);
                radioButton.setToolTipText("Quant. Pedaços: " + tamanho.getQuantidadePecas() + " - Valor: " + tamanho.getValor());
                buttonGroup1.add(radioButton);
                panelTamanhosPedido.add(radioButton);
                radioButton.setVisible(true);
                panelTamanhosPedido.revalidate();
                panelTamanhosPedido.repaint();
                radioButton.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        Enumeration<AbstractButton> buttons = buttonGroup1.getElements();
                        while (buttons.hasMoreElements()) {
                            AbstractButton button = buttons.nextElement();
                            if (button.isSelected()) {
                                JRadioButtonTamanho = (JRadioButton)button;
                                break;
                            }
                        }
                    }
                });
            }

        } catch (IOException e) {
            System.out.println("error");
        }
    }//GEN-LAST:event_panelTamanhosPedidoAncestorAdded

    private PizzaDoce selecionaPizzaDoce(String nome) {
        PizzaDoce pizzaDoce = new PizzaDoce();
        try {
            BancoDeDados banco = new BancoDeDados();
            BancoDeDados.leBDPizzaDoce(BancoDeDados.getBancoPizzaDoce());
            
            for(PizzaDoce pizza : PizzaDoce.getListaPizzasDoces()) {
                if(nome.equals(pizza.getNome())) {
                    pizzaDoce.setNome(nome);
                    pizzaDoce.setListaIngredientes(pizza.getListaIngredientes());
                    return pizzaDoce;
                }
            }
            
            
        } catch (IOException e) {
            System.out.println("error");
        }
        return null;
    }
    
    private PizzaSalgada selecionaPizzaSalgada(String nome) {
        PizzaSalgada pizzaSalgada = new PizzaSalgada();
        try {
            BancoDeDados banco = new BancoDeDados();
            BancoDeDados.leBDPizzaSalgada(BancoDeDados.getBancoPizzaSalgada());
            
            for(PizzaSalgada pizza : PizzaSalgada.getListaPizzasSalgadas()) {
                if(nome.equals(pizza.getNome())) {
                    pizzaSalgada.setNome(nome);
                    pizzaSalgada.setListaIngredientes(pizza.getListaIngredientes());
                    return pizzaSalgada;
                }
            }
            
            
        } catch (IOException e) {
            System.out.println("error");
        }
        return null;
    }
    
    private Tamanho selecionaTamanho(String nome) {
        try {
            BancoDeDados banco = new BancoDeDados();
            BancoDeDados.leBDTamanho(BancoDeDados.getBancoTamanho());
            
            for(Tamanho tamanho : Tamanho.getListaTamanhos()) {
                if(nome.equals(tamanho.getNome())) {
                    return tamanho;
                }
            }
            
            
        } catch (IOException e) {
            System.out.println("error");
        }
        return null;
    }
    
    private Produto selecionaProduto(String nome) {
        try {
            BancoDeDados banco = new BancoDeDados();
            BancoDeDados.leBDProduto(BancoDeDados.getBancoProduto());
            
            for(Produto produto : Produto.getListaProdutos()) {
                if(nome.equals(produto.getNome())) {
                    return produto;
                }
            }
            
            
        } catch (IOException e) {
            System.out.println("error");
        }
        return null;
    }
    
    private void finalizaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizaProdutoActionPerformed
        // TODO add your handling code here:
        //exceção: caso o cliente não tenha selecionado nenhuma pizza ou tamanho
        try {
            BancoDeDados banco = new BancoDeDados();
            BancoDeDados.leBD(BancoDeDados.getBancoCliente());
            BancoDeDados.leBDTamanho(BancoDeDados.getBancoTamanho());
            BancoDeDados.leBDPizzaSalgada(BancoDeDados.getBancoPizzaSalgada());
            BancoDeDados.leBDPizzaDoce(BancoDeDados.getBancoPizzaDoce());
            
            //seleciona o tamanho
            Tamanho tamanho = selecionaTamanho(JRadioButtonTamanho.getText());
            
            //seleciona a pizza
            PizzaSalgada pizzaSalgada;
            PizzaDoce pizzaDoce;
            List<Pizza> pizzas = new ArrayList<>();
            
            //verifica na exceção se pizza doce e salgada estão vazias ou o tamanho está vazio
            Pedido.verificaPizzaTamanhoVazia(listaPizzaSalgadaPedido.getSelectedValue(), listaPizzaDocePedido.getSelectedValue(),tamanho);
            
            if(listaPizzaDocePedido.getSelectedValue() == null) {
                pizzaSalgada = selecionaPizzaSalgada(listaPizzaSalgadaPedido.getSelectedValue());
                pizzas.add(pizzaSalgada);
            } else if(listaPizzaSalgadaPedido.getSelectedValue() == null) {
                pizzaDoce = selecionaPizzaDoce(listaPizzaDocePedido.getSelectedValue());
                pizzas.add(pizzaDoce);
            } else {
                pizzaSalgada = selecionaPizzaSalgada(listaPizzaSalgadaPedido.getSelectedValue());
                pizzaDoce = selecionaPizzaDoce(listaPizzaDocePedido.getSelectedValue());
                pizzas.add(pizzaDoce);
                pizzas.add(pizzaSalgada);
            }

            //cria o pedido
            Pedido pedido = new Pedido(Cliente.getClienteLogado(),CBPagamentoPedido.getSelectedItem().toString(),pizzas,tamanho);
            
            if(ListProdutoPedido.getSelectedValue() != null) {
                pedido.setProduto(selecionaProduto(ListProdutoPedido.getSelectedValue()));
            }
            System.out.println(pedido.getCliente().getNome());
            
            //calcula valor total do pedido
            PedidoController.calculaValor(pedido);
            pedido.setStatus("Solicitado");
            
            //escreve no arquivo json
            PedidoController.adicionaPedido(pedido);
            JOptionPane.showMessageDialog(null, "Pedido Realizado!");
            this.dispose();
            DashboardCliente dashCliente = new DashboardCliente();
            dashCliente.setVisible(true);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (CampoVazio e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } 
    }//GEN-LAST:event_finalizaProdutoActionPerformed

    private void listaPizzaDocePedidoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_listaPizzaDocePedidoAncestorAdded
        // TODO add your handling code here:
        try {
            BancoDeDados banco = new BancoDeDados();
            BancoDeDados.leBDPizzaDoce(BancoDeDados.getBancoPizzaDoce());
            DefaultListModel model = new DefaultListModel();
            for(PizzaDoce pizza : PizzaDoce.getListaPizzasDoces()) {
                model.addElement(pizza.getNome());
            }
            listaPizzaDocePedido.setModel(model);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_listaPizzaDocePedidoAncestorAdded

    private void listaPizzaDocePedidoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaPizzaDocePedidoValueChanged
        // TODO add your handling code here:
        if(listaPizzaDocePedido.getSelectedValue() != null) {
            DefaultTableModel model = (DefaultTableModel)tableIngredientePizzasDocesPedido.getModel();
            PizzaDoce pizzaSelecionada = new PizzaDoce();
            model.setNumRows(0);

            //escreve no input nome o nome da pizza selecionada
            txtNomePizzaDocePedido.setText(listaPizzaDocePedido.getSelectedValue());

            try {
                BancoDeDados banco = new BancoDeDados();
                BancoDeDados.leBDIngrediente(BancoDeDados.getBancoIngrediente());
                //pega qual pizza que foi selecionada na lista
                BancoDeDados.leBDPizzaDoce(BancoDeDados.getBancoPizzaDoce());
                for(PizzaDoce pizza : PizzaDoce.getListaPizzasDoces()) {
                    if(pizza.getNome().equals(listaPizzaDocePedido.getSelectedValue())) {
                        pizzaSelecionada = pizza;
                    }
                }

                for(Ingrediente ingre : Ingrediente.getlistaIngrediente()) {
                    for(Ingrediente aux : pizzaSelecionada.getListaIngredientes()) {
                        if(aux.getNome().equals(ingre.getNome())) {
                            model.addRow(new Object[]{ingre.getNome()});
                            break;
                        }
                    }
                }
                tableIngredientePizzasDocesPedido.setModel(model);
                btnEditPizzaDoce.setEnabled(true);
            } catch (IOException e) {
                System.out.println("erro");
            }
        }
    }//GEN-LAST:event_listaPizzaDocePedidoValueChanged

    private void listaPizzaSalgadaPedidoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_listaPizzaSalgadaPedidoAncestorAdded
        // TODO add your handling code here:
        try {
            BancoDeDados banco = new BancoDeDados();
            BancoDeDados.leBDPizzaSalgada(BancoDeDados.getBancoPizzaSalgada());
            DefaultListModel model = new DefaultListModel();
            for(PizzaSalgada pizza : PizzaSalgada.getListaPizzasSalgadas()) {
                model.addElement(pizza.getNome());
            }
            listaPizzaSalgadaPedido.setModel(model);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_listaPizzaSalgadaPedidoAncestorAdded

    private void listaPizzaSalgadaPedidoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaPizzaSalgadaPedidoValueChanged
        // TODO add your handling code here:
        if(listaPizzaSalgadaPedido.getSelectedValue() != null) {
            DefaultTableModel model = (DefaultTableModel)tableIngredientePizzaSalgadaPedido.getModel();
            PizzaSalgada pizzaSelecionada = new PizzaSalgada();
            model.setNumRows(0);

            //escreve no input nome o nome da pizza selecionada
            txtNomePizzaSalgadaPedido.setText(listaPizzaSalgadaPedido.getSelectedValue());

            try {
                BancoDeDados.leBDIngrediente(BancoDeDados.getBancoIngrediente());
                //pega qual pizza que foi selecionada na lista
                for(PizzaSalgada pizza : PizzaSalgada.getListaPizzasSalgadas()) {
                    if(pizza.getNome().equals(listaPizzaSalgadaPedido.getSelectedValue())) {
                        pizzaSelecionada = pizza;
                    }
                }
                for(Ingrediente ingre : Ingrediente.getlistaIngrediente()) {
                    for(Ingrediente aux : pizzaSelecionada.getListaIngredientes()) {
                        if(aux.getNome().equals(ingre.getNome())) {
                            model.addRow(new Object[]{ingre.getNome()});
                            break;
                        }
                    }
                }
                tableIngredientePizzaSalgadaPedido.setModel(model);
                btnEditPizzaSalgada.setEnabled(true);
            } catch (IOException e) {
                System.out.println("erro");
            }
        }
    }//GEN-LAST:event_listaPizzaSalgadaPedidoValueChanged

    private void btnEditPizzaSalgadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPizzaSalgadaActionPerformed
        // TODO add your handling code here:
        if(listaPizzaSalgadaPedido.getSelectedValue() != null) {
            listaPizzaSalgadaPedido.removeSelectionInterval(listaPizzaSalgadaPedido.getSelectedIndex(), listaPizzaSalgadaPedido.getSelectedIndex());
            txtNomePizzaSalgadaPedido.setText("");
            DefaultTableModel model = (DefaultTableModel)tableIngredientePizzaSalgadaPedido.getModel();
            model.setNumRows(0);
            tableIngredientePizzaSalgadaPedido.setModel(model);
        }
    }//GEN-LAST:event_btnEditPizzaSalgadaActionPerformed

    private void btnDellIngre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDellIngre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDellIngre1ActionPerformed

    private void btnEditPizzaDoceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPizzaDoceActionPerformed
        // TODO add your handling code here:
        if(listaPizzaDocePedido.getSelectedValue() != null) {
            listaPizzaDocePedido.removeSelectionInterval(listaPizzaDocePedido.getSelectedIndex(), listaPizzaDocePedido.getSelectedIndex());
            txtNomePizzaDocePedido.setText("");
            DefaultTableModel model = (DefaultTableModel)tableIngredientePizzasDocesPedido.getModel();
            model.setNumRows(0);
            tableIngredientePizzasDocesPedido.setModel(model);
        }
        
    }//GEN-LAST:event_btnEditPizzaDoceActionPerformed

    private void ListProdutoPedidoComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_ListProdutoPedidoComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_ListProdutoPedidoComponentAdded

    private void ListProdutoPedidoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_ListProdutoPedidoAncestorAdded
        // TODO add your handling code here:
        try {
            BancoDeDados.leBDProduto(BancoDeDados.getBancoProduto());
            DefaultListModel listaProdutosModelo = new DefaultListModel();
            for(Produto prod : Produto.getListaProdutos()) {
                listaProdutosModelo.addElement(prod.getNome());
            }
            ListProdutoPedido.setModel(listaProdutosModelo);
        } catch (IOException e) {
            System.out.println("Error");
        }
    }//GEN-LAST:event_ListProdutoPedidoAncestorAdded

    private void ListProdutoPedidoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListProdutoPedidoValueChanged
        // TODO add your handling code here:
        if(ListProdutoPedido.getSelectedValue() != null) {
            txtNomeProdPedido.setText(ListProdutoPedido.getSelectedValue().toString());
            btnDesmarcarProdutoPedido.setEnabled(true);
            for (Produto prod : Produto.getListaProdutos()) {
                if (ListProdutoPedido.getSelectedValue().toString().equals(prod.getNome())) {
                    txtValorProdPedido.setText(String.valueOf(prod.getValor()));
                }
            }
        }
    }//GEN-LAST:event_ListProdutoPedidoValueChanged

    private void txtNomeProdPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeProdPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeProdPedidoActionPerformed

    private void btnDesmarcarProdutoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesmarcarProdutoPedidoActionPerformed
        // TODO add your handling code here:
        if(ListProdutoPedido.getSelectedValue() != null) {
            ListProdutoPedido.removeSelectionInterval(ListProdutoPedido.getSelectedIndex(), ListProdutoPedido.getSelectedIndex());
            txtNomeProdPedido.setText("");
            txtValorProdPedido.setText("");
        }
    }//GEN-LAST:event_btnDesmarcarProdutoPedidoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FazerPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBPagamentoPedido;
    private javax.swing.JList<String> ListProdutoPedido;
    private javax.swing.JButton btnDellIngre1;
    private javax.swing.JButton btnDesmarcarProdutoPedido;
    private javax.swing.JButton btnEditPizzaDoce;
    private javax.swing.JButton btnEditPizzaSalgada;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton finalizaProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JList<String> listaPizzaDocePedido;
    private javax.swing.JList<String> listaPizzaSalgadaPedido;
    private javax.swing.JPanel panelTamanhosPedido;
    private javax.swing.JTable tableIngredientePizzaSalgadaPedido;
    private javax.swing.JTable tableIngredientePizzasDocesPedido;
    private javax.swing.JTextField txtNomePizzaDoce6;
    private javax.swing.JTextField txtNomePizzaDocePedido;
    private javax.swing.JTextField txtNomePizzaSalgadaPedido;
    private javax.swing.JTextField txtNomeProdPedido;
    private javax.swing.JTextField txtValorProdPedido;
    // End of variables declaration//GEN-END:variables
}
