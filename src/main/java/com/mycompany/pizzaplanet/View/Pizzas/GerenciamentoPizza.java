/*
- Giovanni Almeida Dutra - 202065032AB
- Quezia Emanuelly da Silva Oliveira - 202265561C
- Augusto Benedito Carvalho da Silva - 202265552C
*/

package com.mycompany.pizzaplanet.View.Pizzas;

import com.mycompany.pizzaplanet.View.Ingredientes.*;
import com.mycompany.pizzaplanet.Controller.IngredienteController;
import com.mycompany.pizzaplanet.Controller.PizzaController;
import com.mycompany.pizzaplanet.Excecoes.CampoVazio;
import com.mycompany.pizzaplanet.Model.BancoDeDados;
import com.mycompany.pizzaplanet.Model.Ingrediente;
import com.mycompany.pizzaplanet.Model.PizzaDoce;
import com.mycompany.pizzaplanet.Model.PizzaSalgada;
import com.mycompany.pizzaplanet.View.DashboardAdm;
import com.mycompany.pizzaplanet.View.Produtos.GerenciamentoProduto;
import com.mycompany.pizzaplanet.View.Tamanhos.GerenciamentoTamanho;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class GerenciamentoPizza extends javax.swing.JFrame {

    /**
     * Creates new form GerenciamentoIngredietne
     */
    public GerenciamentoPizza() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnViewAddDoce = new javax.swing.JButton();
        btnViewAdd1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtNomePizzaSalgada = new javax.swing.JTextField();
        btnEditPizzaSalgada = new javax.swing.JButton();
        btnDellIngre1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNomePizzaDoce6 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableIngredientePizzaSalgada = new javax.swing.JTable();
        btnDellPizzaSalgada = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaPizzaSalgada = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNomePizzaDoce = new javax.swing.JTextField();
        btnEditPizzaDoce = new javax.swing.JButton();
        btnDelPizzaDoce = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableIngredientePizzasDoces = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        listaPizzaDoce1 = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 36)); // NOI18N
        jLabel1.setText("Pizzas");

        btnViewAddDoce.setText("Adicionar Pizza Doce");
        btnViewAddDoce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAddDoceActionPerformed(evt);
            }
        });

        btnViewAdd1.setText("Adicionar Pizza Salgada");
        btnViewAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAdd1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel8.setText("Pizzas Doces:");

        jLabel9.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel9.setText("Pizzas Salgadas:");

        jLabel10.setText("Nome:");

        btnEditPizzaSalgada.setText("Editar Pizza");
        btnEditPizzaSalgada.setEnabled(false);
        btnEditPizzaSalgada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPizzaSalgadaActionPerformed(evt);
            }
        });

        btnDellIngre1.setText("Deletar Ingrediente");
        btnDellIngre1.setEnabled(false);
        btnDellIngre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDellIngre1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Ingredientes:");

        jLabel12.setText("Nome:");

        tableIngredientePizzaSalgada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tableIngredientePizzaSalgada);
        if (tableIngredientePizzaSalgada.getColumnModel().getColumnCount() > 0) {
            tableIngredientePizzaSalgada.getColumnModel().getColumn(0).setPreferredWidth(20);
            tableIngredientePizzaSalgada.getColumnModel().getColumn(0).setMaxWidth(20);
        }

        btnDellPizzaSalgada.setText("Deletar Pizza");
        btnDellPizzaSalgada.setEnabled(false);
        btnDellPizzaSalgada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDellPizzaSalgadaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(txtNomePizzaSalgada, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnEditPizzaSalgada)
                        .addGap(44, 44, 44)
                        .addComponent(btnDellPizzaSalgada)
                        .addGap(775, 775, 775)
                        .addComponent(btnDellIngre1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(1113, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel12)
                        .addComponent(txtNomePizzaDoce6))
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomePizzaSalgada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDellIngre1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEditPizzaSalgada, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDellPizzaSalgada, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel12)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(txtNomePizzaDoce6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(356, Short.MAX_VALUE)))
        );

        listaPizzaSalgada.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        listaPizzaSalgada.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        listaPizzaSalgada.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                listaPizzaSalgadaAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        listaPizzaSalgada.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaPizzaSalgadaValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listaPizzaSalgada);

        jLabel2.setText("Nome:");

        btnEditPizzaDoce.setText("Editar Ingrediente");
        btnEditPizzaDoce.setEnabled(false);
        btnEditPizzaDoce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPizzaDoceActionPerformed(evt);
            }
        });

        btnDelPizzaDoce.setText("Deletar Ingrediente");
        btnDelPizzaDoce.setEnabled(false);
        btnDelPizzaDoce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelPizzaDoceActionPerformed(evt);
            }
        });

        jLabel3.setText("Ingredientes:");

        tableIngredientePizzasDoces.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tableIngredientePizzasDoces);
        if (tableIngredientePizzasDoces.getColumnModel().getColumnCount() > 0) {
            tableIngredientePizzasDoces.getColumnModel().getColumn(0).setPreferredWidth(20);
            tableIngredientePizzasDoces.getColumnModel().getColumn(0).setMaxWidth(20);
        }

        listaPizzaDoce1.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        listaPizzaDoce1.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        listaPizzaDoce1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                listaPizzaDoce1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        listaPizzaDoce1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaPizzaDoce1ValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(listaPizzaDoce1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addComponent(txtNomePizzaDoce, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnEditPizzaDoce)
                        .addGap(34, 34, 34)
                        .addComponent(btnDelPizzaDoce)))
                .addGap(85, 85, 85))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomePizzaDoce, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditPizzaDoce, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelPizzaDoce, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(jScrollPane7)
        );

        jMenuBar1.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N

        jMenu1.setText("Dashboard");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Pizzas");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });

        jMenuItem1.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        jMenuItem1.setText("Ingredientes");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        jMenuItem2.setText("Tamanhos");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem2MouseClicked(evt);
            }
        });
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        jMenuItem3.setText("Gerenciador Pizzas");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Produtos");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Pedidos");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(541, 541, 541)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnViewAddDoce)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnViewAdd1)))
                        .addContainerGap(684, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewAddDoce, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(602, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        GerenciamentoIngrediente indexT = new GerenciamentoIngrediente();
        indexT.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        GerenciamentoTamanho indexT = new GerenciamentoTamanho();
        indexT.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void btnViewAddDoceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAddDoceActionPerformed
        // TODO add your handling code here:
        this.dispose();
        AdicionaPizzaDoce addV = new AdicionaPizzaDoce();
        addV.setVisible(true);
    }//GEN-LAST:event_btnViewAddDoceActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        this.dispose();
        DashboardAdm dashAdm = new DashboardAdm();
        dashAdm.setVisible(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        this.dispose();
        GerenciamentoProduto indexT = new GerenciamentoProduto();
        indexT.setVisible(true);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void btnViewAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAdd1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        AdicionaPizzaSalgada viewPizzaSalgada = new AdicionaPizzaSalgada();
        viewPizzaSalgada.setVisible(true);
    }//GEN-LAST:event_btnViewAdd1ActionPerformed

    Object valorSelecionadoAnterior = null;
    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenuItem2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MouseClicked
        // TODO add your handling code here:
        this.dispose();
        GerenciamentoTamanho indexI = new GerenciamentoTamanho();
        indexI.setVisible(true);
    }//GEN-LAST:event_jMenuItem2MouseClicked

    private void btnEditPizzaSalgadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPizzaSalgadaActionPerformed
        // TODO add your handling code here:
        try {
            List<Ingrediente> ingredientesPizza = new ArrayList<>();
            int quantLinhas = tableIngredientePizzaSalgada.getRowCount();
            PizzaSalgada pizzaBanco = new PizzaSalgada();
            
            //pega a pizza que foi selecionada
            for(PizzaSalgada pizza : PizzaSalgada.getListaPizzasSalgadas()) {
                if(pizza.getNome().equals(listaPizzaSalgada.getSelectedValue())) {
                    pizzaBanco = pizza;
                }
            }
            
            //cria uma lista com todos os ingredientes selecionados na lista da view
            for(int i = 0; i < quantLinhas; i++) {
                if(Boolean.TRUE.equals(tableIngredientePizzaSalgada.getModel().getValueAt(i,0))) {
                    Ingrediente ingre = new Ingrediente(tableIngredientePizzaSalgada.getModel().getValueAt(i,1).toString(), "Salgado");
                    ingredientesPizza.add(ingre);
                }
            }
            
            PizzaSalgada pizzaEdita = new PizzaSalgada(txtNomePizzaSalgada.getText().trim(), ingredientesPizza);
            PizzaSalgada.validaCampoVazioAdiciona(pizzaEdita);
            PizzaController.editaPizzaSalgada(pizzaBanco,pizzaEdita);
            JOptionPane.showMessageDialog(null, "Pizza editada com sucesso!!");
            this.dispose();
            GerenciamentoPizza indexP = new GerenciamentoPizza();
            indexP.setVisible(true);
        } catch (CampoVazio e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnEditPizzaSalgadaActionPerformed

    private void btnDellIngre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDellIngre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDellIngre1ActionPerformed

    private void btnDellPizzaSalgadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDellPizzaSalgadaActionPerformed
        // TODO add your handling code here:
        try {

            PizzaSalgada pizzaBanco = new PizzaSalgada();
            
            //pega a pizza que foi selecionada
            for(PizzaSalgada pizza : PizzaSalgada.getListaPizzasSalgadas()) {
                if(pizza.getNome().equals(listaPizzaSalgada.getSelectedValue())) {
                    pizzaBanco = pizza;
                }
            }
             //deleta a pizza          
            PizzaController.deletaPizzaSalgada(pizzaBanco);
            JOptionPane.showMessageDialog(null, "Pizza deletada com sucesso!!");
            this.dispose();
            GerenciamentoPizza indexP = new GerenciamentoPizza();
            indexP.setVisible(true);
        } catch (IOException e) {
            System.out.println("Error");
        }
    }//GEN-LAST:event_btnDellPizzaSalgadaActionPerformed

    private void listaPizzaSalgadaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_listaPizzaSalgadaAncestorAdded
        // TODO add your handling code here:
        try {
            BancoDeDados banco = new BancoDeDados();
            BancoDeDados.leBDPizzaSalgada(BancoDeDados.getBancoPizzaSalgada());
            DefaultListModel model = new DefaultListModel();
            for(PizzaSalgada pizza : PizzaSalgada.getListaPizzasSalgadas()) {
                model.addElement(pizza.getNome());
            }
            listaPizzaSalgada.setModel(model);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_listaPizzaSalgadaAncestorAdded

    private void listaPizzaSalgadaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaPizzaSalgadaValueChanged
        // TODO add your handling code here:
        if(listaPizzaSalgada.getSelectedValue() != null) {
            DefaultTableModel model = (DefaultTableModel)tableIngredientePizzaSalgada.getModel();
            PizzaSalgada pizzaSelecionada = new PizzaSalgada();
            boolean auxiliar = false;
            model.setNumRows(0);
            
            //escreve no input nome o nome da pizza selecionada
            txtNomePizzaSalgada.setText(listaPizzaSalgada.getSelectedValue());
            
            try {
                BancoDeDados.leBDIngrediente(BancoDeDados.getBancoIngrediente());
                //pega qual pizza que foi selecionada na lista
                for(PizzaSalgada pizza : PizzaSalgada.getListaPizzasSalgadas()) {
                    if(pizza.getNome().equals(listaPizzaSalgada.getSelectedValue())) {
                        pizzaSelecionada = pizza;
                    }
                }
                for(Ingrediente ingre : Ingrediente.getlistaIngrediente()) {
                    auxiliar = false;
                    for(Ingrediente aux : pizzaSelecionada.getListaIngredientes()) {
                        if(aux.getNome().equals(ingre.getNome())) {
                            model.addRow(new Object[]{true,ingre.getNome()});
                            auxiliar = true;
                            break;
                        }
                    }
                    if(!auxiliar && "Salgado".equals(ingre.getCategoria())) {
                        model.addRow(new Object[]{false,ingre.getNome()});
                    }
                }
                tableIngredientePizzaSalgada.setModel(model);
                btnEditPizzaSalgada.setEnabled(true);
                btnDellPizzaSalgada.setEnabled(true);
            } catch (IOException e) {
                System.out.println("erro");
            }
        }
    }//GEN-LAST:event_listaPizzaSalgadaValueChanged

    private void btnDelPizzaDoceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelPizzaDoceActionPerformed
        // TODO add your handling code here:
        try {
            PizzaDoce pizzaBanco = new PizzaDoce();
            BancoDeDados.leBDPizzaDoce(BancoDeDados.getBancoPizzaDoce());
            //pega a pizza que foi selecionada
            for(PizzaDoce pizza : PizzaDoce.getListaPizzasDoces()) {
                if(pizza.getNome().equals(listaPizzaDoce1.getSelectedValue())) {
                    pizzaBanco = pizza;
                }
            }
            PizzaController.deletaPizzaDoce(pizzaBanco);
            JOptionPane.showMessageDialog(null, "ingrediente deletado com sucesso");
            this.dispose();
            GerenciamentoPizza novoJ = new GerenciamentoPizza();
            novoJ.setVisible(true);
          
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Erro ao deletar ingrediente");
        }
    }//GEN-LAST:event_btnDelPizzaDoceActionPerformed

    private void listaPizzaDoce1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_listaPizzaDoce1AncestorAdded
        // TODO add your handling code here:
        try {
            BancoDeDados banco = new BancoDeDados();
            BancoDeDados.leBDPizzaDoce(BancoDeDados.getBancoPizzaDoce());
            DefaultListModel model = new DefaultListModel();
           for(PizzaDoce pizza : PizzaDoce.getListaPizzasDoces()) {
                model.addElement(pizza.getNome());
           }
            listaPizzaDoce1.setModel(model);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_listaPizzaDoce1AncestorAdded

    private void listaPizzaDoce1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaPizzaDoce1ValueChanged
        // TODO add your handling code here:
         if(listaPizzaDoce1.getSelectedValue() != null) {
            DefaultTableModel model = (DefaultTableModel)tableIngredientePizzasDoces.getModel();
            PizzaDoce pizzaSelecionada = new PizzaDoce();
            boolean auxiliar = false;
            model.setNumRows(0);
            
            //escreve no input nome o nome da pizza selecionada
            txtNomePizzaDoce.setText(listaPizzaDoce1.getSelectedValue());
            
            try {
                BancoDeDados banco = new BancoDeDados();
                BancoDeDados.leBDIngrediente(BancoDeDados.getBancoIngrediente());
                //pega qual pizza que foi selecionada na lista
                BancoDeDados.leBDPizzaDoce(BancoDeDados.getBancoPizzaDoce());
                for(PizzaDoce pizza : PizzaDoce.getListaPizzasDoces()) {
                    if(pizza.getNome().equals(listaPizzaDoce1.getSelectedValue())) {
                        pizzaSelecionada = pizza;
                    }
                }
                
                
                for(Ingrediente ingre : Ingrediente.getlistaIngrediente()) {
                    auxiliar = false;
                    for(Ingrediente aux : pizzaSelecionada.getListaIngredientes()) {
                        if(aux.getNome().equals(ingre.getNome())) {
                            model.addRow(new Object[]{true,ingre.getNome()});
                            auxiliar = true;
                            break;
                        }
                    }
                    if(!auxiliar && "Doce".equals(ingre.getCategoria())) {
                        model.addRow(new Object[]{false,ingre.getNome()});
                    }
                }
                tableIngredientePizzasDoces.setModel(model);
                btnEditPizzaDoce.setEnabled(true);
                btnDelPizzaDoce.setEnabled(true);
            } catch (IOException e) {
                System.out.println("erro");
            }
        }
    }//GEN-LAST:event_listaPizzaDoce1ValueChanged

    private void btnEditPizzaDoceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPizzaDoceActionPerformed
        // TODO add your handling code here:
        try {
            List<Ingrediente> ingredientesPizza = new ArrayList<>();
            int quantLinhas = tableIngredientePizzasDoces.getRowCount();
            PizzaDoce pizzaBanco = new PizzaDoce();
            
            BancoDeDados.leBDPizzaDoce(BancoDeDados.getBancoPizzaDoce());
            //pega a pizza que foi selecionada
            for(PizzaDoce pizza : PizzaDoce.getListaPizzasDoces()) {
                if(pizza.getNome().equals(listaPizzaDoce1.getSelectedValue())) {
                    pizzaBanco = pizza;
                }
            }
            
            //cria uma lista com todos os ingredientes selecionados na lista da view
            for(int i = 0; i < quantLinhas; i++) {
                if(Boolean.TRUE.equals(tableIngredientePizzasDoces.getModel().getValueAt(i,0))) {
                    Ingrediente ingre = new Ingrediente(tableIngredientePizzasDoces.getModel().getValueAt(i,1).toString(), "Salgado");
                    ingredientesPizza.add(ingre);
                }
            }
            
            PizzaDoce pizzaEdita = new PizzaDoce(txtNomePizzaDoce.getText().trim(), ingredientesPizza);
            PizzaDoce.validaCampoVazioAdiciona(pizzaEdita);
            PizzaController.editaPizzaDoce(pizzaBanco,pizzaEdita);
            JOptionPane.showMessageDialog(null, "Pizza editada com sucesso!!");
            this.dispose();
            GerenciamentoPizza indexP = new GerenciamentoPizza();
            indexP.setVisible(true);
        } catch (CampoVazio e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnEditPizzaDoceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GerenciamentoPizza().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelPizzaDoce;
    private javax.swing.JButton btnDellIngre1;
    private javax.swing.JButton btnDellPizzaSalgada;
    private javax.swing.JButton btnEditPizzaDoce;
    private javax.swing.JButton btnEditPizzaSalgada;
    private javax.swing.JButton btnViewAdd1;
    private javax.swing.JButton btnViewAddDoce;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JList<String> listaPizzaDoce1;
    private javax.swing.JList<String> listaPizzaSalgada;
    private javax.swing.JTable tableIngredientePizzaSalgada;
    private javax.swing.JTable tableIngredientePizzasDoces;
    private javax.swing.JTextField txtNomePizzaDoce;
    private javax.swing.JTextField txtNomePizzaDoce6;
    private javax.swing.JTextField txtNomePizzaSalgada;
    // End of variables declaration//GEN-END:variables
}
